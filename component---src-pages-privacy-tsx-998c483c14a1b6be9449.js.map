{"version":3,"file":"component---src-pages-privacy-tsx-998c483c14a1b6be9449.js","mappings":"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","sources":["webpack://launch-lagoon/./src/components/header.tsx","webpack://launch-lagoon/./src/components/footer.tsx","webpack://launch-lagoon/./src/components/layout.tsx","webpack://launch-lagoon/./src/components/seo.tsx","webpack://launch-lagoon/./src/hooks/queries.ts","webpack://launch-lagoon/./src/pages/privacy.tsx","webpack://launch-lagoon/./src/images/icon.png"],"sourcesContent":["import * as React from \"react\";\nimport {useQueryConfig} from \"../hooks/queries\";\nimport {Link} from \"gatsby\";\nimport AppIcon from '../images/icon.png';\n\ninterface HeaderProps {\n    linkPrefix: string;\n}\n\nexport const Header: React.FC<HeaderProps> = ({linkPrefix}) => {\n    let config = useQueryConfig();\n    return (\n        <header className=\"bg-white\">\n            <div className=\"mx-auto max-w-screen-xl px-4 py-6 sm:px-6 lg:px-8\">\n                <div className=\"flex h-16 items-center justify-between\">\n                    <div className=\"flex-1 md:flex md:items-center md:gap-12\">\n                        <Link to={`./${linkPrefix}`} className={`block text-${config.primaryColor}`}>\n                            <span className=\"sr-only\">Home</span>\n                                <img src={AppIcon} alt=\"Icon of the App\" className=\"block inset-0 h-16 w-auto\"/>\n                        </Link>\n                        <Link to={`./${linkPrefix}`} className={`block text-${config.primaryColor}`}>\n                            <span\n                                className={`text-4xl font-bold text-center font-sans text-${config.primaryColor} rounded`}>{config.appName.toUpperCase()}</span>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </header>\n    )\n}\n","import * as React from \"react\";\nimport {useQueryConfig} from \"../hooks/queries\";\nimport {Link} from \"gatsby\";\n\ninterface FooterProps {\n    linkPrefix: string;\n}\n\nexport const Footer: React.FC<FooterProps> = ({linkPrefix}) => {\n    let config = useQueryConfig();\n    let year = new Date().getFullYear();\n    return (\n        <footer className=\"bg-white\">\n            <div className=\"mx-auto max-w-screen-xl px-4 py-16 sm:px-6 lg:px-8\">\n\n                <div className=\"mt-8 border-t border-gray-100 pt-8\">\n                    <div className=\"sm:flex sm:justify-between\">\n                        <p className=\"text-xs text-gray-500\">&copy; {year}. {config.companyName}. All rights reserved.</p>\n\n                        <ul className=\"mt-8 flex flex-wrap justify-start gap-4 text-xs sm:mt-0 lg:justify-end\">\n                            <li>\n                                <Link to={`${linkPrefix}terms`} className=\"text-gray-500 transition hover:opacity-75\">Terms & Conditions</Link>\n                            </li>\n                            <li>\n                                <Link to={`${linkPrefix}privacy`} className=\"text-gray-500 transition hover:opacity-75\">Privacy Policy</Link>\n                            </li>\n                            <li>\n                                <a href=\"https://github.com/bednar/launch-lagoon\" className=\"text-gray-500 transition hover:opacity-75\">Launch Lagoon</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    )\n}\n","import * as React from \"react\";\nimport {Header} from \"./header\";\nimport {Footer} from \"./footer\";\n\ninterface LayoutProps {\n    children: React.ReactNode;\n    isHomepage: boolean;\n}\n\nexport const Layout: React.FC<LayoutProps> = ({children, isHomepage }) => {\n    let linkPrefix =  isHomepage ? \"\" : \"../\";\n    return (\n        <body className=\"font-sans\">\n        {<Header linkPrefix={linkPrefix}/>}\n        {children}\n        {<Footer linkPrefix={linkPrefix}/>}\n        </body>\n    )\n}\n","import React, {ReactNode} from \"react\";\nimport {useQueryConfig} from \"../hooks/queries\";\nimport AppIcon from '../images/icon.png';\n\ninterface SEOProps {\n    title?: string;\n    children?: ReactNode;\n}\n\nexport const SEO: React.FC<SEOProps> = ({ title, children }) => {\n    let configProps = useQueryConfig();\n\n    return (\n        <>\n            <title>{configProps.appName}{title ? ` - ${title}` : ``}</title>\n            <meta name=\"description\" content={configProps.appDescription} />\n            <meta name=\"keywords\" content={configProps.appKeywords}/>\n            <link rel=\"icon\" href={AppIcon} type=\"image/png\"/>\n            {children}\n        </>\n    );\n};\n","import {graphql, useStaticQuery} from \"gatsby\";\n\ninterface ConfigProps {\n    /**\n     * The name of the company, it is used in the footer.\n     */\n    companyName: string;\n    /**\n     * The name of the app, it is used in the header and the title of the pages.\n     */\n    appName: string;\n    /**\n     * The description of the app, it is used in SEO HTML meta tags.\n     */\n    appDescription: string;\n    /**\n     * The keywords of the app, it is used in SEO HTML meta tags.\n     */\n    appKeywords: string;\n    /**\n     * The URL of the app in the App Store, it is used in the promotion.\n     */\n    appStoreLink?: string;\n    /**\n     * The URL of the app in the Play Store, it is used in the promotion.\n     */\n    playStoreLink?: string;\n    /**\n     * Primary color of the theme used in the header and some other elements,\n     * it is from the Tailwind CSS color palette\n     */\n    primaryColor: string;\n}\n\n/**\n * The configuration data such as the name of the app and the primary color.\n */\nexport const useQueryConfig = (): ConfigProps => {\n    const data = useStaticQuery(graphql`\n        query {\n            allDataYaml {\n                nodes {\n                    companyName\n                    appName\n                    appDescription\n                    appKeywords\n                    appStoreLink\n                    playStoreLink\n                    primaryColor\n                }\n            }\n        }`\n    );\n\n    return data.allDataYaml.nodes[0];\n};\n","import * as React from \"react\"\nimport {graphql} from \"gatsby\"\nimport {Layout} from \"../components/layout\";\nimport {MarkdownPageDataProps} from \"../hooks/typed\";\nimport {SEO} from \"../components/seo\";\n\nconst PrivacyPage: React.FC<MarkdownPageDataProps> = ({data}) => {\n    const markdown = data.markdownRemark;\n    return (\n        <Layout isHomepage={false}>\n            <div className=\"mx-auto max-w-screen-xl px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-2xl font-bold my-4\">{markdown.frontmatter.title}</h1>\n                <div className=\"text-gray-700\">\n                    <p dangerouslySetInnerHTML={{__html: markdown.html}}/>\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\nquery {\n    markdownRemark(fileAbsolutePath: {regex: \"/privacy-policy/\"}) {\n        html\n        frontmatter {\n            title\n        }\n    }\n}`\n\nexport default PrivacyPage\n\nexport const Head = () => <SEO title={\"Privacy Policy\"}/>\n","export default __webpack_public_path__ + \"static/icon-6dca591e3658782c0d3e8dfc96c41b6e.png\";"],"names":["Header","_ref","linkPrefix","config","useQueryConfig","React","className","Link","to","primaryColor","src","AppIcon","alt","appName","toUpperCase","Footer","year","Date","getFullYear","companyName","href","Layout","children","isHomepage","SEO","title","configProps","name","content","appDescription","appKeywords","rel","type","useStaticQuery","allDataYaml","nodes","data","markdown","markdownRemark","frontmatter","dangerouslySetInnerHTML","__html","html","Head"],"sourceRoot":""}